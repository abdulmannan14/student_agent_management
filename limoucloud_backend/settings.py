"""
Django settings for limoucloud_backend project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import datetime
from pathlib import Path
import os
import dj_database_url
import dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
STATIC_DIR = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_DIR = os.path.join(BASE_DIR, 'media')

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

dotenv_file = os.path.join(BASE_DIR, ".env")
if os.path.isfile(dotenv_file):
    dotenv.load_dotenv(dotenv_file)
else:
    pass
    # raise Exception("Please add .env file with Secrets")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["limoucloud.com", "qa.limoucloud.com", "lc-qa-whq3ht5hlq-uc.a.run.app", "127.0.0.1",
                 "pre-prod.limoucloud.com",'orderkaro.herokuapp.com']

# Application definition
MY_APPS = [
    'Employee',
    'Account',
    'Client',
    'Vehicle',
    'Company',
    'Home',
    'Driver',
    'Reservation',
    "django_tables2",
    'setting',
    'Accounting',
    'Restaurant',
    'Table',
    'Order',
    'Menu',
    # 'rolepermissions',
]

INSTALLED_APPS = [
                     'admin_volt.apps.AdminVoltConfig',
                     'django.contrib.admin',
                     'django.contrib.auth',
                     'django.contrib.contenttypes',
                     'django.contrib.sessions',
                     'django.contrib.messages',
                     'django.contrib.staticfiles',
                     'rest_framework',
                     # 'knox',
                     'rest_framework_simplejwt',
                     'rest_framework.authtoken',
                     'corsheaders',
                     'widget_tweaks',
                     'django_filters',
                     "import_export"
                 ] + MY_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # Middleware CORS
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
CORS_ORIGIN_WHITELIST = [
    'http://localhost:3000',
    'http://limoucloud.com',
    'https://limoucloud.com',
    'https://www.limoucloud.com',
]

ROOT_URLCONF = 'limoucloud_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

REST_FRAMEWORK = {
    # 'DEFAULT_PERMISSION_CLASSES': (
    #     'rest_framework.permissions.IsAuthenticated',
    # ),
    # 'DEFAULT_AUTHENTICATION_CLASSES': (
    #     'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    #     'rest_framework.authentication.SessionAuthentication',
    #     'rest_framework.authentication.BasicAuthentication',
    # ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    )
}

JWT_AUTH = {
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=90),
}

WSGI_APPLICATION = 'limoucloud_backend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
production_env = os.getenv("GAE_APPLICATION", os.getenv("GCR_APPLICATION", None))
if production_env:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.getenv("DB_NAME"),
            'USER': os.getenv("DB_USER"),
            'PASSWORD': os.getenv("DB_PASSWORD"),
            'HOST': os.getenv("DB_HOST"),
            'PORT': '5432',
        }
    }
else:
    DATABASES = {
        'default': dj_database_url.config()
    }
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR ,'db.sqlite3'),
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# STATIC_URL = '/staticfiles/'
STATIC_URL = "/staticfiles/"
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
STATIC_ROOT = "static"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "staticfiles"),
]
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# MEDIA
MEDIA_ROOT = MEDIA_DIR
MEDIA_URL = '/media/'

# STATIC_ROOT = ''


# APPEND_SLASH = False

# production_env = False
# if production_env:
#     STRIPE_PUBLIC_KEY = os.getenv("STRIPE_PUBLIC_KEY")
#     STRIPE_SECRET_KEY = os.getenv("STRIPE_SECRET_KEY")
# else:
#     STRIPE_PUBLIC_KEY = "pk_test_51HfX6DErQrTjWD5cP78v01nYfrFGVXAQKTfQlDLetBsLuRcDjHLFanz5JaIhcNAssh0Nogf5FPmzPg1c1a83fAti003ZZkZfJP"
#     STRIPE_SECRET_KEY = "sk_test_51HfX6DErQrTjWD5cVN38h75CSbdLJSw36QNy6NCKJ8bIOEgPu66K9AWsGvHugJdHr2DFmOfqDKrl95Fa4LJgye5a00Ev3ubTJ1"

from .env_config import *

google_api_key = 'AIzaSyAPFHIiScwARNq20c7nNYzKPY6sPFL6grE'
