# Generated by Django 3.1.3 on 2022-03-28 20:26

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django_cryptography.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Company', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AirportToServiceArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Distance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_per_mile_distance', models.FloatField(blank=True, null=True)),
                ('minimum_price_distance', models.FloatField(blank=True, null=True)),
                ('base_price_distance', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=256, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('message', models.TextField(blank=True, null=True, verbose_name='How can we help ?')),
            ],
        ),
        migrations.CreateModel(
            name='GeneralAirport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=12, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=12, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralServiceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Company.companyprofilemodel')),
            ],
        ),
        migrations.CreateModel(
            name='GeneralVehicleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Company.companyprofilemodel')),
            ],
        ),
        migrations.CreateModel(
            name='Hour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SalesTax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('abbreviation', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('tax_number', models.CharField(blank=True, max_length=50, null=True)),
                ('show_on_invoice', models.BooleanField(blank=True, default=False, null=True)),
                ('recoverable', models.BooleanField(blank=True, default=False, null=True)),
                ('compound', models.BooleanField(blank=True, default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Company.companyprofilemodel')),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Company.companyprofilemodel')),
            ],
        ),
        migrations.CreateModel(
            name='ZoneToZone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(blank=True, null=True)),
                ('from_zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='from_zone', to='setting.zone')),
                ('to_zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='to_zone', to='setting.zone')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_passengers', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49), (50, 50), (51, 51), (52, 52), (53, 53), (54, 54), (55, 55)])),
                ('max_luggage', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49), (50, 50), (51, 51), (52, 52), (53, 53), (54, 54), (55, 55)])),
                ('image', models.ImageField(blank=True, null=True, upload_to='images')),
                ('all_vehicle_type_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='setting.generalvehicletype', verbose_name='Vehicle Types')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Company.companyprofilemodel')),
            ],
        ),
        migrations.CreateModel(
            name='TaxRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.FloatField(blank=True, null=True)),
                ('effective_date', models.DateField(blank=True, default=datetime.date(1900, 1, 1), null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('sales_tax', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.salestax')),
            ],
        ),
        migrations.CreateModel(
            name='StripePayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_key', models.CharField(blank=True, max_length=256, null=True)),
                ('secret_key', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=256, null=True))),
                ('account_id', models.CharField(blank=True, max_length=150, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Company.companyprofilemodel')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('TRANSFER(P2P)', 'TRANSFER(P2P)'), ('Hourly service', 'Hourly service'), ('Airport Pickup', 'Airport Pickup'), ('Airport Dropoff', 'Airport Dropoff')], max_length=50, null=True, verbose_name='Type')),
                ('round_trip', models.BooleanField(blank=True, default=False, null=True)),
                ('all_service_type_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='setting.generalservicetype')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Company.companyprofilemodel')),
            ],
        ),
        migrations.CreateModel(
            name='ServicePrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_type', models.CharField(blank=True, choices=[('FLAT RATE', 'FLAT RATE'), ('HOURLY RATE', 'HOURLY RATE'), ('DISTANCE RATE', 'DISTANCE RATE'), ('ZONE TO ZONE FLAT', 'ZONE TO ZONE FLAT')], max_length=30, null=True)),
                ('price', models.CharField(blank=True, max_length=100, null=True)),
                ('gratuity_percentage', models.FloatField(blank=True, default=0.0, max_length=100, null=True)),
                ('minimum_hours', models.CharField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23)], max_length=100, null=True)),
                ('fuel_Surcharge_percentage', models.FloatField(blank=True, default=0.0, max_length=100, null=True)),
                ('sales_tax_percentage', models.FloatField(blank=True, default=0.0, max_length=100, null=True)),
                ('discount_percentage', models.FloatField(blank=True, default=0.0, max_length=100, null=True)),
                ('tolls', models.IntegerField(blank=True, default=0, null=True)),
                ('meet_and_greet', models.IntegerField(blank=True, default=0, null=True)),
                ('per_additional_passenger', models.IntegerField(blank=True, default=0, null=True)),
                ('per_additional_luggage', models.IntegerField(blank=True, default=0, null=True)),
                ('per_additional_stop', models.IntegerField(blank=True, default=0, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Company.companyprofilemodel')),
                ('distance_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='setting.distance')),
                ('flat_rate', models.ManyToManyField(blank=True, to='setting.AirportToServiceArea')),
                ('hourly_rate', models.ManyToManyField(blank=True, to='setting.Hour')),
                ('sales_tax', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.salestax')),
                ('service_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.servicetype')),
                ('vehicle_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.vehicletype')),
                ('zone_to_zone_rate', models.ManyToManyField(blank=True, to='setting.ZoneToZone')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Service Area Name')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Company.companyprofilemodel')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyAirport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('airport', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_airport', to='setting.generalairport')),
                ('company', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='Company.companyprofilemodel')),
            ],
        ),
        migrations.AddField(
            model_name='airporttoservicearea',
            name='airport',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='setting.companyairport'),
        ),
        migrations.AddField(
            model_name='airporttoservicearea',
            name='service_area',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='setting.servicearea'),
        ),
        migrations.AddField(
            model_name='airporttoservicearea',
            name='service_price_row',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='setting.serviceprice'),
        ),
    ]
