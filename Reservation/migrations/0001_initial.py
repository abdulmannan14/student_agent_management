# Generated by Django 3.1.3 on 2022-03-28 20:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Company', '0001_initial'),
        ('Vehicle', '0001_initial'),
        ('Employee', '0001_initial'),
        ('Client', '0002_auto_20220328_2026'),
        ('setting', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GeoAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('street', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('zip', models.CharField(blank=True, max_length=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=12, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=12, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation_status', models.CharField(choices=[('QUOTED', 'QUOTED'), ('CONFIRMED', 'CONFIRMED'), ('SCHEDULED', 'SCHEDULED'), ('COMPLETED', 'COMPLETED'), ('CANCELLED', 'CANCELLED'), ('REQUESTED', 'REQUESTED'), ('PENDING - PICKED UP', 'PENDING - PICKED UP'), ('PENDING - DROPPED OFF', 'PENDING - DROPPED OFF')], default='QUOTED', max_length=35)),
                ('charge_by', models.CharField(blank=True, choices=[('FLAT RATE', 'FLAT RATE'), ('HOURLY RATE', 'HOURLY RATE'), ('DISTANCE RATE', 'DISTANCE RATE'), ('DAILY RATE', 'DAILY RATE')], max_length=50, null=True)),
                ('pay_by', models.CharField(blank=True, choices=[('CASH', 'CASH'), ('CREDIT CARD', 'CREDIT CARD'), ('INVOICE', 'INVOICE')], default='CASH', max_length=50, null=True, verbose_name='Payment Method')),
                ('accepted_by_driver', models.BooleanField(blank=True, default=False, null=True)),
                ('pick_up_date', models.DateField(blank=True, null=True)),
                ('pick_up_time', models.TimeField(blank=True, null=True)),
                ('distance_in_miles', models.FloatField(blank=True, null=True)),
                ('distance_covered_in_ride', models.FloatField(blank=True, null=True)),
                ('total_hours', models.CharField(blank=True, max_length=10, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('no_of_days', models.IntegerField(blank=True, null=True)),
                ('rate_per_mile', models.IntegerField(blank=True, null=True)),
                ('rate_per_day', models.IntegerField(blank=True, null=True)),
                ('additional_passenger_charge', models.IntegerField(blank=True, null=True)),
                ('additional_luggage_charge', models.IntegerField(blank=True, null=True)),
                ('additional_stops_charge', models.IntegerField(blank=True, null=True)),
                ('stops_between_ride', models.IntegerField(blank=True, default=0, null=True)),
                ('passenger_quantity', models.IntegerField(blank=True, default=1, null=True)),
                ('luggage_bags_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('car_seats', models.IntegerField(blank=True, null=True)),
                ('client_notes', models.CharField(blank=True, max_length=150, null=True)),
                ('driver_notes', models.CharField(blank=True, max_length=200, null=True)),
                ('discount_percentage', models.FloatField(blank=True, default=0.0, max_length=100, null=True)),
                ('gratuity_percentage', models.FloatField(blank=True, default=0.0, max_length=100, null=True)),
                ('fuel_Surcharge_percentage', models.FloatField(blank=True, default=0.0, max_length=100, null=True)),
                ('sales_tax_percentage', models.FloatField(blank=True, default=0, null=True)),
                ('tolls', models.IntegerField(blank=True, default=0, null=True)),
                ('meet_and_greet', models.IntegerField(blank=True, default=0, null=True)),
                ('duration', models.CharField(blank=True, choices=[('0 hrs', '0 hrs'), ('1 hrs', '1 hrs'), ('2 hrs', '2 hrs'), ('3 hrs', '3 hrs'), ('4 hrs', '4 hrs'), ('5 hrs', '5 hrs'), ('6 hrs', '6 hrs'), ('7 hrs', '7 hrs'), ('8 hrs', '8 hrs'), ('9 hrs', '9 hrs'), ('10 hrs', '10 hrs'), ('11 hrs', '11 hrs'), ('12 hrs', '12 hrs'), ('13 hrs', '13 hrs'), ('14 hrs', '14 hrs'), ('15 hrs', '15 hrs'), ('16 hrs', '16 hrs'), ('17 hrs', '17 hrs'), ('18 hrs', '18 hrs'), ('19 hrs', '19 hrs'), ('20 hrs', '20 hrs'), ('21 hrs', '21 hrs'), ('22 hrs', '22 hrs'), ('23 hrs', '23 hrs'), ('24 hrs', '24 hrs')], max_length=10, null=True)),
                ('base_fare', models.FloatField(blank=True, null=True)),
                ('deposit_amount', models.FloatField(blank=True, default=0, null=True)),
                ('deposit_type', models.CharField(blank=True, choices=[('CASH', 'CASH'), ('CREDIT CARD', 'CREDIT CARD')], max_length=100, null=True)),
                ('balance_fare', models.FloatField(blank=True, default=0, null=True)),
                ('balance_paid', models.BooleanField(blank=True, default=False, null=True)),
                ('total_fare', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Client.personalclientprofilemodel')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Company.companyprofilemodel')),
                ('destination_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='destination_address', to='Reservation.geoaddress')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Employee.employeeprofilemodel')),
                ('pickup_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pickup_address', to='Reservation.geoaddress')),
                ('sales_tax', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.salestax')),
                ('service_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='setting.servicetype')),
                ('stops_address', models.ManyToManyField(blank=True, to='Reservation.GeoAddress')),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Vehicle.vehicle')),
                ('vehicle_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='setting.vehicletype')),
            ],
        ),
    ]
